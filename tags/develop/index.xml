<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Develop on Zikey Vi</title>
    <link>https://cerr.cc/tags/develop/</link>
    <description>Recent content in Develop on Zikey Vi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>© 2022, Zikey Vi</copyright>
    <lastBuildDate>Mon, 08 Aug 2022 14:34:10 +0800</lastBuildDate><atom:link href="https://cerr.cc/tags/develop/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ZKV的C、C&#43;&#43;构建系统学习之路</title>
      <link>https://cerr.cc/post/ccer_zkv/</link>
      <pubDate>Mon, 08 Aug 2022 14:34:10 +0800</pubDate>
      
      <guid>https://cerr.cc/post/ccer_zkv/</guid>
      <description>编译工具链 此前疑惑的一个问题是，一套编译工具链究竟包含了些什么东西？当我们使用包管理器一键安装编译工具链时，所安装的程序、数据、文档被分散在了根文件系统的各个位置，难以让我们直接一窥究竟。好在老生常谈的buildroot又为我们解决了这个问题，（当然，从网上下载一份编译工具链也能达到相同的效果）。取一份buildroot构建完成的编译工具链瞅瞅，路径位于buildroot/output/host：
▶ ls host bin etc include lib lib64 libexec man sbin share usr var x86_64-buildroot-linux-uclibc 其中的直接编译工具部分：
▶ ls bin | grep &amp;#34;x86_64-linux&amp;#34; | grep -v &amp;#34;br_real&amp;#34; x86_64-linux-addr2line	# convert addresses into line number/file name pairs x86_64-linux-ar	# create, modify, and extract from archives x86_64-linux-as	# the portable GNU assembler x86_64-linux-c++filt	# demangle C++ and Java symbols x86_64-linux-cc x86_64-linux-cpp x86_64-linux-elfedit	# update the ELF header of ELF files x86_64-linux-gcc x86_64-linux-gcc-11.</description>
    </item>
    
    <item>
      <title>ZKV对后端的浅尝辄止</title>
      <link>https://cerr.cc/post/backend/</link>
      <pubDate>Mon, 04 Jul 2022 17:47:35 +0800</pubDate>
      
      <guid>https://cerr.cc/post/backend/</guid>
      <description>TODO：
oauth https://oauth.net/ s3-pika restful https://restfulapi.net/ 概念 总览 https://www.redhat.com/zh/topics 云原生 https://www.redhat.com/zh/topics/cloud-native-apps 分布式 CAP理论 在计算机科学中, CAP定理（CAP theorem）, 又被称作 布鲁尔定理（Brewer&amp;rsquo;s theorem）, 它指出对于一个分布式计算系统来说，不可能同时满足以下三点:
一致性(Consistency) (所有节点在同一时间具有相同的数据) 可用性(Availability) (保证每个请求不管成功或者失败都有响应) 分隔容忍(Partition tolerance) (系统中任意信息的丢失或失败不会影响系统的继续运作) CAP理论的核心是：一个分布式系统不可能同时很好的满足一致性，可用性和分区容错性这三个需求，最多只能同时较好的满足两个。
因此，根据 CAP 原理将 NoSQL 数据库分成了满足 CA 原则、满足 CP 原则和满足 AP 原则三 大类：
CA - 单点集群，满足一致性，可用性的系统，通常在可扩展性上不太强大。 CP - 满足一致性，分区容忍性的系统，通常性能不是特别高。 AP - 满足可用性，分区容忍性的系统，通常可能对一致性要求低一些。 计算 技术 LVS https://cloud.tencent.com/developer/article/1657962 https://my.oschina.net/leeypp1/blog/294807?fromerr=xfCehUJY 产品 CentOS reference：
https://en.wikipedia.org/wiki/CentOS https://zhuanlan.zhihu.com/p/337075432 Docker dockerfile https://docs.docker.com/engine/reference/builder/ https://www.runoob.com/docker/docker-dockerfile.html compose https://docs.docker.com/compose/ https://www.runoob.com/docker/docker-compose.html swarm https://docs.docker.com/engine/swarm/ https://www.runoob.com/docker/docker-swarm.html K8s Kubernetes, also known as K8s, is an open-source system for automating deployment, scaling, and management of containerized applications.</description>
    </item>
    
  </channel>
</rss>
